# fmedia: global definitions for Makefile: OS, compiler, utils

include ../ffbase/test/makeconf

# set OS-specific values
DEL := rm -f
CP := cp -v
ifeq "$(OS)" "windows"
CP := cp -u -v -p
PACK := zip -9 -r -v
PACK_EXT := zip

else ifeq "$(OS)" "linux"
CP := cp -u -v -p
PACK := tar --owner=0 --group=0 --numeric-owner -cJv -f
PACK_EXT := tar.xz

else ifeq "$(OS)" "freebsd"
PACK := tar -cJv -f
PACK_EXT := tar.xz

else ifeq "$(OS)" "apple"
PACK := zip -9 -r -v
PACK_EXT := zip
endif

CFLAGS_STD := -std=gnu99 -fno-strict-aliasing -fvisibility=hidden -Wno-deprecated-declarations
CXXFLAGS := -fno-strict-aliasing -fvisibility=hidden -Wno-deprecated-declarations
LDFLAGS_STD :=
OBJCOPY := $(CROSS_PREFIX)objcopy
STRIP := $(CROSS_PREFIX)strip

# set debug options
CFLAGS_STD += -g
LDFLAGS_STD += -g

# set optimization options
CFLAGS_OPT := -O3 -flto
LDFLAGS_OPT := -O3 -flto
ifeq "$(DEBUG)" "1"
	CFLAGS_OPT := -DFF_DEBUG -D_DEBUG
	LDFLAGS_OPT :=
endif


# set OS-specific values
ifeq "$(OS)" "windows"
LD_LWS2_32 := -lws2_32 -liphlpapi

else #OS

CFLAGS_OS := -fpic
LDFLAGS_OS := -fpic
LD_LMATH := -lm

ifeq "$(OS)" "linux"
LD_LDL := -ldl
endif

endif #OS

LDFLAGS_OS += $(LINKFLAGS)
LD_RPATH_ORIGIN := $(LINK_RPATH_ORIGIN)
LD_LPTHREAD := $(LINK_PTHREAD)

# CPU-specific options
ifeq "$(CPU)" "amd64"
	CFLAGS_CPU := -march=x86-64
	LDFLAGS_CPU := -march=x86-64

else ifeq "$(CPU)" "x86"
	CFLAGS_CPU := -m32 -march=i686
	CFLAGS_CPU += -Wno-int-to-pointer-cast -Wno-pointer-to-int-cast
	LDFLAGS_CPU := -m32 -march=i686

endif


ifeq "$(COMPILER)" "gcc"
# Remove dependency on libgcc_s_sjlj-1.dll (Windows), libgcc_s.so.1 (Linux)
LDFLAGS_COMP := -static-libgcc
endif

CFLAGS := $(CFLAGS_STD) $(CFLAGS_OPT) $(CFLAGS_OS) $(CFLAGS_CPU)
LINKFLAGS := $(LDFLAGS_STD) $(LDFLAGS_OPT) $(LDFLAGS_OS) $(LDFLAGS_CPU) $(LDFLAGS_COMP)


# rule for separate .debug files
%.debug: %
ifeq ($(OS),apple)
	# dsymutil $< -o $@
	$(STRIP) -u -r $<

else

	$(OBJCOPY) --only-keep-debug $< $@
	$(STRIP) $<
	$(OBJCOPY) --add-gnu-debuglink=$@ $<
endif

	touch $@
